openapi: 3.0.3
info:
  title: Title
  description: Title
  version: 1.0.0
servers:
  - url: 'https'
paths:
  /roleUsers:
    get:
      summary: List all roleUsers
      operationId: listRoleUsers
      tags:
        - roleUsers
      parameters:
        - name: limit
          in: query
          description: How many items to return at one time (max 100)
          required: false
          type: integer
          format: int32
      responses:
        "200":
          description: A paged array of roleUsers
          headers:
            x-next:
              type: string
              description: A link to the next page of responses
          schema:
            $ref: '#/definitions/RoleUsers'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
    post:
      summary: Create a roleUser
      operationId: createRoleUsers
      tags:
        - roleUsers
      responses:
        "201":
          description: Null response
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
  /roleUsers/{roleUserId}:
    get:
      summary: Info for a specific roleUser
      operationId: showRoleUserById
      tags:
        - roleUsers
      parameters:
        - name: roleUserId
          in: path
          required: true
          description: The id of the roleUser to retrieve
          type: string
      responses:
        "200":
          description: Expected response to a valid request
          schema:
            $ref: '#/definitions/RoleUsers'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
  /roles:
    get:
      summary: List all roles
      operationId: listRoles
      tags:
        - roles
      parameters:
        - name: limit
          in: query
          description: How many items to return at one time (max 100)
          required: false
          type: integer
          format: int32
      responses:
        "200":
          description: A paged array of roles
          headers:
            x-next:
              type: string
              description: A link to the next page of responses
          schema:
            $ref: '#/definitions/Roles'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
    post:
      summary: Create a role
      operationId: createRoles
      tags:
        - roles
      responses:
        "201":
          description: Null response
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
  /roles/{roleId}:
    get:
      summary: Info for a specific role
      operationId: showRoleById
      tags:
        - roles
      parameters:
        - name: roleId
          in: path
          required: true
          description: The id of the role to retrieve
          type: string
      responses:
        "200":
          description: Expected response to a valid request
          schema:
            $ref: '#/definitions/Roles'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
  /modelPermissionUsers:
    get:
      summary: List all modelPermissionUsers
      operationId: listModelPermissionUsers
      tags:
        - modelPermissionUsers
      parameters:
        - name: limit
          in: query
          description: How many items to return at one time (max 100)
          required: false
          type: integer
          format: int32
      responses:
        "200":
          description: A paged array of modelPermissionUsers
          headers:
            x-next:
              type: string
              description: A link to the next page of responses
          schema:
            $ref: '#/definitions/ModelPermissionUsers'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
    post:
      summary: Create a modelPermissionUser
      operationId: createModelPermissionUsers
      tags:
        - modelPermissionUsers
      responses:
        "201":
          description: Null response
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
  /modelPermissionUsers/{modelPermissionUserId}:
    get:
      summary: Info for a specific modelPermissionUser
      operationId: showModelPermissionUserById
      tags:
        - modelPermissionUsers
      parameters:
        - name: modelPermissionUserId
          in: path
          required: true
          description: The id of the modelPermissionUser to retrieve
          type: string
      responses:
        "200":
          description: Expected response to a valid request
          schema:
            $ref: '#/definitions/ModelPermissionUsers'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
  /actionPermissions:
    get:
      summary: List all actionPermissions
      operationId: listActionPermissions
      tags:
        - actionPermissions
      parameters:
        - name: limit
          in: query
          description: How many items to return at one time (max 100)
          required: false
          type: integer
          format: int32
      responses:
        "200":
          description: A paged array of actionPermissions
          headers:
            x-next:
              type: string
              description: A link to the next page of responses
          schema:
            $ref: '#/definitions/ActionPermissions'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
    post:
      summary: Create a actionPermission
      operationId: createActionPermissions
      tags:
        - actionPermissions
      responses:
        "201":
          description: Null response
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
  /actionPermissions/{actionPermissionId}:
    get:
      summary: Info for a specific actionPermission
      operationId: showActionPermissionById
      tags:
        - actionPermissions
      parameters:
        - name: actionPermissionId
          in: path
          required: true
          description: The id of the actionPermission to retrieve
          type: string
      responses:
        "200":
          description: Expected response to a valid request
          schema:
            $ref: '#/definitions/ActionPermissions'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
  /modelPermissions:
    get:
      summary: List all modelPermissions
      operationId: listModelPermissions
      tags:
        - modelPermissions
      parameters:
        - name: limit
          in: query
          description: How many items to return at one time (max 100)
          required: false
          type: integer
          format: int32
      responses:
        "200":
          description: A paged array of modelPermissions
          headers:
            x-next:
              type: string
              description: A link to the next page of responses
          schema:
            $ref: '#/definitions/ModelPermissions'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
    post:
      summary: Create a modelPermission
      operationId: createModelPermissions
      tags:
        - modelPermissions
      responses:
        "201":
          description: Null response
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
  /modelPermissions/{modelPermissionId}:
    get:
      summary: Info for a specific modelPermission
      operationId: showModelPermissionById
      tags:
        - modelPermissions
      parameters:
        - name: modelPermissionId
          in: path
          required: true
          description: The id of the modelPermission to retrieve
          type: string
      responses:
        "200":
          description: Expected response to a valid request
          schema:
            $ref: '#/definitions/ModelPermissions'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
  /users:
    get:
      summary: List all users
      operationId: listUsers
      tags:
        - users
      parameters:
        - name: limit
          in: query
          description: How many items to return at one time (max 100)
          required: false
          type: integer
          format: int32
      responses:
        "200":
          description: A paged array of users
          headers:
            x-next:
              type: string
              description: A link to the next page of responses
          schema:
            $ref: '#/definitions/Users'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
    post:
      summary: Create a user
      operationId: createUsers
      tags:
        - users
      responses:
        "201":
          description: Null response
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
  /users/{userId}:
    get:
      summary: Info for a specific user
      operationId: showUserById
      tags:
        - users
      parameters:
        - name: userId
          in: path
          required: true
          description: The id of the user to retrieve
          type: string
      responses:
        "200":
          description: Expected response to a valid request
          schema:
            $ref: '#/definitions/Users'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
  


definitions:
  RoleUser:
    type: "object"
    required:
      - id
    properties:
      id:
        type: int
  RoleUsers:
    type: array
    items:
      $ref: '#/definitions/RoleUser'
  Role:
    type: "object"
    required:
      - id
      - authority
    properties:
      id:
        type: int
      authority:
        type: string
  Roles:
    type: array
    items:
      $ref: '#/definitions/Role'
  ModelPermissionUser:
    type: "object"
    required:
      - id
      - value
      - subAttribute
    properties:
      id:
        type: int
      value:
        type: boolean
      subAttribute:
        type: string
  ModelPermissionUsers:
    type: array
    items:
      $ref: '#/definitions/ModelPermissionUser'
  ActionPermission:
    type: "object"
    required:
      - id
      - reference
      - libelle
    properties:
      id:
        type: int
      reference:
        type: string
      libelle:
        type: string
  ActionPermissions:
    type: array
    items:
      $ref: '#/definitions/ActionPermission'
  ModelPermission:
    type: "object"
    required:
      - id
      - reference
      - libelle
    properties:
      id:
        type: int
      reference:
        type: string
      libelle:
        type: string
  ModelPermissions:
    type: array
    items:
      $ref: '#/definitions/ModelPermission'
  User:
    type: "object"
    required:
      - id
      - credentialsNonExpired
      - enabled
      - email
      - accountNonExpired
      - accountNonLocked
      - username
      - password
      - passwordChanged
      - lastName
      - firstName
      - phone
    properties:
      id:
        type: int
      credentialsNonExpired:
        type: boolean
      enabled:
        type: boolean
      email:
        type: string
      accountNonExpired:
        type: boolean
      accountNonLocked:
        type: boolean
      username:
        type: string
      password:
        type: string
      passwordChanged:
        type: boolean
      lastName:
        type: string
      firstName:
        type: string
      phone:
        type: string
  Users:
    type: array
    items:
      $ref: '#/definitions/User'

  Error:
    type: "object"
    required:
      - code
      - message
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
